/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package aplikasipenjualanbuku.ui;

import aplikasipenjualanbuku.utils.PrintBuku;
import aplikasipenjualanbuku.dao.BukuDAO;
import aplikasipenjualanbuku.model.BukuModel;

import java.awt.print.*;
import javax.swing.*;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.util.List;



public class FormBuku extends javax.swing.JFrame {

    /**
     * Creates new form FormBuku
     */
    public FormBuku() {
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblTitle = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblIdBuku = new javax.swing.JLabel();
        lblJudul = new javax.swing.JLabel();
        lblPengarang = new javax.swing.JLabel();
        lblHarga = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBuku = new javax.swing.JTable();
        btnCetak = new javax.swing.JButton();
        txtIdBuku = new javax.swing.JTextField();
        txtJudul = new javax.swing.JTextField();
        txtPengarang = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(100, 341));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("FORM BUKU");
        getContentPane().add(lblTitle, java.awt.BorderLayout.PAGE_START);

        jPanel1.setPreferredSize(new java.awt.Dimension(700, 500));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblIdBuku.setText("ID Buku");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblIdBuku, gridBagConstraints);

        lblJudul.setText("Judul");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblJudul, gridBagConstraints);

        lblPengarang.setText("Pengarang");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblPengarang, gridBagConstraints);

        lblHarga.setText("Harga");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 6);
        jPanel1.add(lblHarga, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(300, 200));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(450, 400));

        tblBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "JUDUL", "PENGARANG", "HARGA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBuku);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        jPanel1.add(btnCetak, gridBagConstraints);

        txtIdBuku.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtIdBuku, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtJudul, gridBagConstraints);

        txtPengarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPengarangActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtPengarang, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 47, 8, 19);
        jPanel1.add(txtHarga, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnTambah, gridBagConstraints);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnEdit, gridBagConstraints);

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnHapus, gridBagConstraints);

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        jPanel2.add(btnBatal, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 20;
        jPanel1.add(jPanel2, gridBagConstraints);

        jButton1.setText("Kembali");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 18, 0, 0);
        jPanel1.add(jButton1, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPengarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPengarangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPengarangActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
 if (!validateInput()) {
        return;
    }

    try {
        BukuModel buku = new BukuModel();
        buku.setJudul(txtJudul.getText());
        buku.setPengarang(txtPengarang.getText());
        buku.setHarga(Double.parseDouble(txtHarga.getText()));

        BukuDAO bukuDAO = new BukuDAO();
        bukuDAO.tambahBuku(buku);
        JOptionPane.showMessageDialog(this, "Buku berhasil ditambahkan!");
        loadTable();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_btnTambahActionPerformed

    public void printTable() {
    try {
        PrinterJob job = PrinterJob.getPrinterJob();
        job.setPrintable(new PrintBuku(tblBuku));
        
        if (job.printDialog()) {
            job.print();
            JOptionPane.showMessageDialog(this,
                "Printing complete.",
                "Print Result",
                JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (PrinterException pe) {
        JOptionPane.showMessageDialog(this,
            "Printing failed: " + pe.getMessage(),
            "Print Error",
            JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
      int selectedRow = tblBuku.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Pilih data yang ingin diubah!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (!validateInput()) {
        return;
    }

    try {
        int id = Integer.parseInt(tblBuku.getValueAt(selectedRow, 0).toString());
        String judul = txtJudul.getText();
        String pengarang = txtPengarang.getText();
        double harga = Double.parseDouble(txtHarga.getText());
        
        BukuModel buku = new BukuModel();
        buku.setIdBuku(id);
        buku.setJudul(judul);
        buku.setPengarang(pengarang);
        buku.setHarga(harga);
        
        BukuDAO bukuDAO = new BukuDAO();
        bukuDAO.updateBuku(buku);
        JOptionPane.showMessageDialog(null, "Data berhasil diubah!");
        loadTable();
        clearForm();
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
     int selectedRow = tblBuku.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Pilih data yang ingin dihapus!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            int id = Integer.parseInt(tblBuku.getValueAt(selectedRow, 0).toString());
            BukuDAO bukuDAO = new BukuDAO();
            bukuDAO.hapusBuku(id); // Panggil method deleteBuku di BukuDAO
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
            loadTable();
            clearForm();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
    clearForm();      
    }//GEN-LAST:event_btnBatalActionPerformed

    private void tblBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBukuMouseClicked
    int selectedRow = tblBuku.getSelectedRow();
        if (selectedRow != -1) {
            txtIdBuku.setText(tblBuku.getValueAt(selectedRow, 0).toString());
            txtJudul.setText(tblBuku.getValueAt(selectedRow, 1).toString());
            txtPengarang.setText(tblBuku.getValueAt(selectedRow, 2).toString());
            txtHarga.setText(tblBuku.getValueAt(selectedRow, 3).toString());
        }        
    }//GEN-LAST:event_tblBukuMouseClicked

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
    printTable();            // TODO add your handling code here:
    }//GEN-LAST:event_btnCetakActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private void loadTable() {
    try {
        BukuDAO bukuDAO = new BukuDAO();
        List<BukuModel> listBuku = bukuDAO.daftarBuku();
        DefaultTableModel model = (DefaultTableModel) tblBuku.getModel();
        model.setRowCount(0); // Clear data
        for (BukuModel buku : listBuku) {
            model.addRow(new Object[]{buku.getIdBuku(), buku.getJudul(), buku.getPengarang(), buku.getHarga()});
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}
    private boolean validateInput() {
    if (txtJudul.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Judul tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return false;
    }

    if (txtPengarang.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Pengarang tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return false;
    }

    if (txtHarga.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Harga tidak boleh kosong!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return false;
    }

    try {
        Double.parseDouble(txtHarga.getText());
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "Harga harus berupa angka!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return false;
    }

    return true;
}
    private void clearForm() {
    txtJudul.setText("");
    txtPengarang.setText("");
    txtHarga.setText("");
    tblBuku.clearSelection();
}
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormBuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHarga;
    private javax.swing.JLabel lblIdBuku;
    private javax.swing.JLabel lblJudul;
    private javax.swing.JLabel lblPengarang;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblBuku;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtIdBuku;
    private javax.swing.JTextField txtJudul;
    private javax.swing.JTextField txtPengarang;
    // End of variables declaration//GEN-END:variables
}
